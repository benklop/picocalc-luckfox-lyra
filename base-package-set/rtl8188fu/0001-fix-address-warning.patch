diff --git a/core/rtw_sta_mgt.c b/core/rtw_sta_mgt.c
index 68eda77..1deccba 100644
--- a/core/rtw_sta_mgt.c
+++ b/core/rtw_sta_mgt.c
@@ -345,8 +345,7 @@ void rtw_mfree_stainfo(struct sta_info *psta)
 {
 _func_enter_;
 
-	if(&psta->lock != NULL)
-		 _rtw_spinlock_free(&psta->lock);
+	_rtw_spinlock_free(&psta->lock);
 
 	_rtw_free_sta_xmit_priv_lock(&psta->sta_xmitpriv);
 	_rtw_free_sta_recv_priv_lock(&psta->sta_recvpriv);
diff --git a/hal/phydm/phydm_debug.c b/hal/phydm/phydm_debug.c
index 73efc27..022d8f9 100644
--- a/hal/phydm/phydm_debug.c
+++ b/hal/phydm/phydm_debug.c
@@ -1430,7 +1430,7 @@ phydm_cmd_parser(
 	case PHYDM_RA:
 
 		for (i = 0; i < 5; i++) {
-			if (input[i + 1]) {
+			if (input[i + 1][0] != '\0') {
 				PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
 
 				PHYDM_SNPRINTF((output + used, out_len - used, "new SET, RA_var[%d]= (( %d ))\n", i , var1[i]));
@@ -1451,7 +1451,7 @@ phydm_cmd_parser(
 	case PHYDM_PATHDIV:
 
 		for (i = 0; i < 5; i++) {
-			if (input[i + 1]) {
+			if (input[i + 1][0] != '\0') {
 				PHYDM_SSCANF(input[i + 1], DCMD_HEX, &var1[i]);
 
 				/*PHYDM_SNPRINTF((output+used, out_len-used, "new SET, PATHDIV_var[%d]= (( %d ))\n", i , var1[i]));*/
@@ -1471,7 +1471,7 @@ phydm_cmd_parser(
 	case PHYDM_DEBUG:
 
 		for (i = 0; i < 5; i++) {
-			if (input[i + 1]) {
+			if (input[i + 1][0] != '\0') {
 				PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
 
 				/*PHYDM_SNPRINTF((output+used, out_len-used, "new SET, Debug_var[%d]= (( %d ))\n", i , var1[i]));*/
@@ -1490,7 +1490,7 @@ phydm_cmd_parser(
 	case PHYDM_SUPPORT_ABILITY:
 
 		for (i = 0; i < 5; i++) {
-			if (input[i + 1]) {
+			if (input[i + 1][0] != '\0') {
 				PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
 
 				/*PHYDM_SNPRINTF((output+used, out_len-used, "new SET, support ablity_var[%d]= (( %d ))\n", i , var1[i]));*/
@@ -1508,7 +1508,7 @@ phydm_cmd_parser(
 	case PHYDM_SMART_ANT:
 
 		for (i = 0; i < 5; i++) {
-			if (input[i + 1]) {
+			if (input[i + 1][0] != '\0') {
 				PHYDM_SSCANF(input[i + 1], DCMD_HEX, &var1[i]);
 				input_idx++;
 			}
@@ -1568,7 +1568,7 @@ phydm_cmd_parser(
 		
 	case PHYDM_SET_TXAGC:
 		for (i = 0; i < 5; i++) {
-			if (input[i + 1]) {
+			if (input[i + 1][0] != '\0') {
 				PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
 
 				/*PHYDM_SNPRINTF((output+used, out_len-used, "new SET, support ablity_var[%d]= (( %d ))\n", i , var1[i]));*/
@@ -1657,7 +1657,7 @@ phydm_cmd_parser(
 	{
 		u1Byte	type = 0;
 		
-		if (input[1]) {
+		if (input[1][0] != '\0') {
 			PHYDM_SSCANF(input[1], DCMD_DECIMAL, &var1[0]);
 			type = (u1Byte)var1[0];
 		}
diff --git a/os_dep/linux/ioctl_cfg80211.c b/os_dep/linux/ioctl_cfg80211.c
index ebc5376..ca94c8c 100644
--- a/os_dep/linux/ioctl_cfg80211.c
+++ b/os_dep/linux/ioctl_cfg80211.c
@@ -2468,7 +2468,7 @@ if (padapter->registrypriv.mp_mode == 1)
 	#ifdef CONFIG_P2P
 	if( pwdinfo->driver_interface == DRIVER_CFG80211 )
 	{
-		if(ssids->ssid != NULL
+		if(request->n_ssids > 0 && ssids->ssid_len >= 7
 			&& _rtw_memcmp(ssids->ssid, "DIRECT-", 7)
 			&& rtw_get_p2p_ie((u8 *)request->ie, request->ie_len, NULL, NULL)
 		)
